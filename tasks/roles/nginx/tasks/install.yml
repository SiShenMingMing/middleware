---
#- include_role:
#    name: common/set_yum

- name: Check command exists
  shell: |
    command -v nginx
  ignore_errors: true
  changed_when: false
  register: nginx_cmd

- name: Check nginx env
  block:
    - name: Backup nginx binary
      shell: |
        cp $(command -v nginx) $(command -v nginx)-$(date +"%Y-%m-%d_%H%M%S")

    - name: Check config
      shell:
        nginx -t

    - name: Check command
      shell: |
        nginx -V 2>&1 | grep conf-path={{ middleware_path }}/nginx/nginx.conf

    - name: Stop nginx
      systemd:
        name: nginx
        state: stopped
        daemon_reload: yes
  rescue:
    - name: Print when errors
      debug:
        msg: 'current nginx config or command error!'

    - name: Force a failure in middle of recovery!
      command:
        /bin/false
  when: nginx_cmd is successful

- name: Clean nginx dir
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ nginx_src_dir }}"
    - /usr/local/luajit2-2.1
    - /usr/local/src/nginx-module-vts-0.1.18
    - /usr/local/src/echo-nginx-module-0.62rc1
    - /usr/local/src/set-misc-nginx-module-0.32

- name: Create directory
  file:
    path: "{{ nginx_src_dir }}/{{ item }}"
    state: directory
    mode: '0755'
    recurse: yes
  with_items:
    - php
    - php_extend

- name: Unarchive nginx module
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - {src: "{{PACKAGES_DIR}}/packages/middleware/nginx/lua/luajit2-2.1-20190912.tar.gz", dest: "{{ nginx_src_dir }}"}
    - {src: "{{PACKAGES_DIR}}/packages/middleware/nginx/lua/lualib.tar.gz", dest: "{{ nginx_src_dir }}"}
    - {src: "{{PACKAGES_DIR}}/packages/middleware/nginx/lua/ngx_devel_kit-0.3.1.tar.gz", dest: "{{ src_dir }}"}
    - {src: "{{PACKAGES_DIR}}/packages/middleware/nginx/lua/lua-nginx-module-0.10.15.tar.gz", dest: "{{ src_dir }}"}
    - {src: "{{PACKAGES_DIR}}/packages/middleware/nginx/{{ nginx_package }}", dest: "{{ nginx_src_dir }}"}
    - {src: "{{PACKAGES_DIR}}/packages/middleware/nginx/modules/nginx-module-vts-0.1.18.tar.gz", dest: "{{ src_dir }}"}
    - {src: "{{PACKAGES_DIR}}/packages/middleware/nginx/modules/echo-nginx-module-0.62rc1.tar.gz", dest: "{{ src_dir }}"}
    - {src: "{{PACKAGES_DIR}}/packages/middleware/nginx/modules/set-misc-nginx-module-0.32.tar.gz", dest: "{{ src_dir }}"}

- name: Install dependencies
  package: name={{ item }} state=present
  with_items:
    - gcc
    - pcre
    - pcre-devel
    - zlib
    - zlib-devel
    - openssl
    - openssl-devel

- name: Install lualib
  shell: >-
    chdir={{ nginx_src_dir }}/luajit2-2.1-20190912 make PREFIX=/usr/local/luajit2-2.1 &&
    chdir={{ nginx_src_dir }}/luajit2-2.1-20190912 make install PREFIX=/usr/local/luajit2-2.1

- name: Add lualib
  shell: |
    cp -rf {{ nginx_src_dir }}/lualib/* /usr/local/luajit2-2.1/share/lua/5.1

- name: check if nginx user exists (ignore errors)
  command: id {{ nginx_user }}
  ignore_errors: yes
  changed_when: false
  register: user_exists

- name: Add user
  block:
    - name: add nginx group
      group:
        name: "{{ nginx_group }}"
        state: present

    - name: add nginx user
      user:
        name: "{{ nginx_user }}"
        group: "{{ nginx_group }}"
        comment: "nginx user"
        create_home: no
        shell: /bin/false
        system: yes
  when: user_exists is failed

#- name: Upload nginx binary
#  copy:
#    src: "nginx_{{ nginx_version }}"
#    dest: /usr/sbin/nginx
#    mode: '0755'

#- name: Unarchive nginx base file
#  unarchive:
#    src: "nginx_basefile_{{ nginx_version }}.tar.gz"
#    dest: "{{ middleware_path }}"

#- name: Check nginx command available
#  command:
#    nginx -error
#  ignore_errors: yes
#  changed_when: false
#  register: nginx_available

- name: build nginx
  block:
    - name: Config nginx
      shell: |
        export LUAJIT_LIB=/usr/local/luajit2-2.1/lib &&
        export LUAJIT_INC=/usr/local/luajit2-2.1/include/luajit-2.1 &&
        chdir={{ nginx_src_dir }}/nginx-{{ nginx_version }} ./configure --prefix=/usr/share/nginx \
            --sbin-path=/usr/sbin/nginx \
            --modules-path=/usr/lib64/nginx/modules \
            --pid-path={{ middleware_path }}/nginx/nginx.pid \
            --conf-path={{ middleware_path }}/nginx/nginx.conf \
            --error-log-path={{ middleware_logs }}/nginx/error.log \
            --http-log-path={{ middleware_logs }}/nginx/access.log \
            --user={{ nginx_user }} \
            --group={{ nginx_group }} \
            --with-http_realip_module \
            --with-http_auth_request_module \
            --with-stream \
            --with-http_ssl_module \
            --with-http_sub_module \
            --with-ld-opt='-ljemalloc' \
            --with-ld-opt="-Wl,-rpath,/usr/local/luajit2-2.1/lib" \
            --add-module=/usr/local/src/ngx_devel_kit-0.3.1 \
            --add-module=/usr/local/src/lua-nginx-module-0.10.15 \
            --add-module=/usr/local/src/nginx-module-vts-0.1.18 \
            --add-module=/usr/local/src/echo-nginx-module-0.62rc1 \
            --add-module=/usr/local/src/set-misc-nginx-module-0.32

    - name: Install nginx
      shell: |
        export LUAJIT_LIB=/usr/local/luajit2-2.1/lib &&
        export LUAJIT_INC=/usr/local/luajit2-2.1/include/luajit-2.1 &&
        chdir={{ nginx_src_dir }}/nginx-{{ nginx_version }} make &&
        chdir={{ nginx_src_dir }}/nginx-{{ nginx_version }} make install
  when: nginx_build

- name: Create nginx dependence dirctory
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    recurse: yes
  with_items:
    - "{{ middleware_logs }}/nginx"
    - "{{ middleware_path }}/nginx/sites-enabled"
    - "{{ middleware_path }}/nginx/conf.d"
    - "{{ middleware_path }}/nginx/proxy_temp"
    - "{{ middleware_path }}/nginx/proxy_cache"
    - "{{ middleware_path }}/nginx/proxy_cache_image"
    - "{{ middleware_path }}/nginx/lualib"

- name: Upload nginx config file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: '0644'
  with_items:
    - {src: "nginx.conf.j2", dest: "{{ middleware_path }}/nginx/nginx.conf"}
    - {src: "upstream-tomcat.conf.j2", dest: "{{ middleware_path }}/nginx/conf.d/upstream-tomcat.conf"}

- name: symlink config to sites-enabled
  file:
    src: "{{ middleware_path }}/nginx/conf.d/upstream-tomcat.conf"
    path: "{{ middleware_path }}/nginx/sites-enabled/upstream-tomcat.conf"
    state: link

- name: Upload nginx call file
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: '0644'
  with_items:
    - {src: "hubble_uuid4.lua", dest: "{{ middleware_path }}/nginx/lualib/uuid4.lua"}
    - {src: "htpasswd", dest: "{{ middleware_path }}/nginx/htpasswd"}

- name: Create nginx systemd
  template:
    src: nginx.service.j2
    dest: /usr/lib/systemd/system/nginx.service
    mode: '0644'

- name: Judge php command exists
  shell: command -v php-fpm
  ignore_errors: true
  register: php_cmd_exists

- name: Install, configure, and start PHP
  block:
    - name: upload php package
      copy:
        src: "{{ item }}"
        dest: "{{ nginx_src_dir }}/{{ item }}"
        mode: '0755'
      with_items:
        - php/mod_php72w-7.2.21-1.w7.x86_64.rpm
        - php/php72w-cli-7.2.21-1.w7.x86_64.rpm
        - php/php72w-common-7.2.21-1.w7.x86_64.rpm
        - php/php72w-devel-7.2.21-1.w7.x86_64.rpm
        - php/php72w-fpm-7.2.21-1.w7.x86_64.rpm
        - php_extend/php72w-gd-7.2.21-1.w7.x86_64.rpm
        - php_extend/php72w-mbstring-7.2.21-1.w7.x86_64.rpm
        - php_extend/php72w-mysql-7.2.21-1.w7.x86_64.rpm
        - php_extend/php72w-opcache-7.2.21-1.w7.x86_64.rpm
        - php_extend/php72w-pdo-7.2.21-1.w7.x86_64.rpm
        - php_extend/php72w-pear-1.10.4-1.w7.noarch.rpm
        - php_extend/php72w-pecl-igbinary-2.0.5-1.w7.x86_64.rpm
        - php_extend/php72w-pecl-redis-3.1.6-1.w7.x86_64.rpm
        - php_extend/php72w-process-7.2.21-1.w7.x86_64.rpm
        - php_extend/php72w-xml-7.2.21-1.w7.x86_64.rpm
      run_once: true

    - name: Find all rpm files in folder
      find:
        paths: "{{ nginx_src_dir }}/php"
        pattern: "*.rpm"
        file_type: file
      register: rpm_files

    - name: Installing php
      yum:
        name: "{{ rpm_files.files | map(attribute='path') | list}}"
        state: present
      become: true
      register: result
      until: result is successful

    - name: Notes listen port
      lineinfile:
        path: /etc/php-fpm.d/www.conf
        regexp: "^listen = 127.0.0.1:9000"
        line: ";listen = 127.0.0.1:9000"

    - name: Config php socks
      shell: |
        [ "$(grep 'php-cgi.sock' /etc/php-fpm.d/www.conf)" ] || sed -i '/;listen = 127.0.0.1:9000/a\listen = /dev/shm/php-cgi.sock' /etc/php-fpm.d/www.conf &&
        [ "$(grep 'Asia/Shanghai' /etc/php.ini)" ] || sed -i '/;date.timezone/a\date.timezone = Asia/Shanghai' /etc/php.ini &&
        sed -i "/^post_max_size/c post_max_size = 1024M" /etc/php.ini &&
        sed -i "/^upload_max_filesize/c upload_max_filesize = 1024M" /etc/php.ini

    - name: Find all rpm files in folder
      find:
        paths: /tmp/php_extend
        pattern: "*.rpm"
      register: php_extend_rpm_files

    - name: Installing php modules
      yum:
        name: "{{ php_extend_rpm_files.files | map(attribute='path') | list}}"
        state: present
      become: true
      register: result
      until: result is successful

    - name: "Create directory"
      file:
        path: "{{ middleware_data }}/html"
        state: directory
        mode: '0775'
        owner: "{{ php_user_name }}"
        group: "{{ php_user_group }}"

    - name: Start php
      systemd: name=php-fpm state=restarted daemon_reload=yes enabled=yes
  when:
    - php_cmd_exists is failed
    - install_php

- name: Judge user exists
  shell: "id {{ scp_user_name }}"
  register: user_exists
  ignore_errors: true

- name: Add user
  block:
    - name: Create download directory
      file:
        path: "{{ nginx_download_path }}"
        state: directory
        mode: '0775'

    - name: Create user
      shell: |
        useradd -r {{ php_user_group }}
        useradd -G {{ php_user_group }} -M -n -d {{ nginx_download_path }} -c "file upload" {{ scp_user_name }}
        chown -R {{ scp_user_name }}.{{ nginx_group }} {{ nginx_download_path }}
        echo "uploadUfsoft123" | passwd --stdin developerupload
  when:
    - user_exists is failed

- name: Clean nginx package
  file:
    path: "{{ nginx_src_dir }}"
    state: absent

- name: Daemon reload
  systemd:
    name: nginx
    state: started
    enabled: yes
    daemon_reload: yes

- name: Waiting nginx start
  wait_for:
    delay: 3
    port: "{{ nginx_port }}"
    host: "{{ inventory_hostname }}"

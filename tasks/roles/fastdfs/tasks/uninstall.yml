---
- name: Judge fastdfs exists
  shell: command -v fdfs_trackerd
  register: fdfs_exists
  changed_when: false
  ignore_errors: true

- block:
    - name: Stop service
      service: name={{item}} state=stopped enabled=no
      with_items:
        - fdfs-trackerd
        - fdfs-storaged

    - name: Backup data
      shell: "cd {{ middleware_data }} && rm -fr fastdfs.$(date +%Y-%m-%d).bak && mv fastdfs fastdfs.$(date +%Y-%m-%d).bak"

    - name: Delete fastdfs files
      file: path={{ item }} state=absent
      with_items:
        - /etc/fdfs
        - /usr/lib/systemd/system/fdfs-trackerd.service
        - /usr/lib/systemd/system/fdfs-storage.service

    - name: Delete bin files
      shell: rm /usr/bin/fdfs_* -f
      args:
        warn: false

  ignore_errors: true
  when:
    - fdfs_exists is success

- name: Judge nginx has fdfs config
  shell: "cd {{ middleware_path }}/nginx/conf.d >/dev/null 2>&1 && ls *.conf | grep -v fastdfs.conf"
  register: proxy_exists
  ignore_errors: true

- block:
  - name: Stop nginx
    systemd: name=nginx state=stopped enabled=no daemon_reload=yes
    ignore_errors: true

  - name: Delete nginx files
    file: path={{ item }} state=absent
    with_items:
      - /usr/lib/systemd/system/nginx.service
      - /usr/sbin/nginx

  - name: Delete nginx config
    shell: "rm {{ middleware_path }}/nginx/* -rf"

  when: proxy_exists.stdout == ""

- block:
  - name: Delete fdfs nginx config
    file:
      path: "{{ item }}/fastdfs.conf"
      state: absent
    with_items:
      - "{{ middleware_path }}/nginx/sites-enabled"
      - "{{ middleware_path }}/nginx/conf.d"

  - name: Restart nginx
    systemd: name=nginx state=restarted daemon_reload=yes

  when: proxy_exists.stdout != ""

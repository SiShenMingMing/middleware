---
#- name: "Download kafka binary package archive"
#  get_url: url={{ kafka_url }} dest={{ kafka_bin_tmp }} timeout=600
# - name: Get package from url
#   get_url: url={{ files_url }}/{{ line_item }} dest={{ role_path }}/files/{{ line_item }}
#   with_items:
#     - "kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz"
#     - "kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz.asc"
#     - kafka_KEYS
#   ignore_errors: true
#   when: nexus_url != ""
#   connection: local
#   run_once: true
#   loop_control:
#     loop_var: line_item

- name: Upload kafka binary package archive
  copy:
    src: "{{PACKAGES_DIR}}/packages/middleware/kafka/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz"
    dest: "{{ kafka_bin_tmp }}"

#- name: "Download the corresponding cryptographic signature file"
#  get_url: url={{ kafka_sig_url }} dest={{ kafka_sig_tmp }} timeout=600

- name: Upload kafka PGP keys
  copy:
    src: "kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz.asc"
    dest: "{{ kafka_sig_tmp }}"

- name: "Copy the kafka PGP keys"
  copy: src=kafka_KEYS dest={{ kafka_keys_tmp }}
  changed_when: False

- name: "Import kafka PGP keys"
  shell: gpg --import {{ kafka_keys_tmp }}
  changed_when: False

- name: "Verify kafka binary package archive authenticity"
  shell: gpg --verify {{ kafka_sig_tmp }} {{ kafka_bin_tmp }}
  changed_when: False

- name: "Extract downloaded kafka archive"
  unarchive: copy=no creates=/usr/local/kafka_{{ kafka_scala_version }}-{{ kafka_version }} dest=/usr/local src={{ kafka_bin_tmp }}
  become: true

- name: "Link /usr/local/kafka to the right version"
  file: path=/usr/local/kafka state=link src=/usr/local/kafka_{{ kafka_scala_version }}-{{ kafka_version }}
  become: true

- name: "Create upstart config"
  template: dest=/etc/init/kafka.conf src=etc/init/kafka.conf.j2 mode=0644 owner=root group=root
  become: true
  when: ansible_service_mgr != 'systemd'
  notify:
    - restart kafka

- name: "Create systemd config"
  template: dest=/etc/systemd/system/kafka-{{ kafka_port }}.service src=etc/systemd/system/kafka.service.j2 mode=0644 owner=root group=root
  become: true
  when: ansible_service_mgr == 'systemd'
  notify:
    - restart kafka

- name: "Reload systemctl daemon"
  command: systemctl daemon-reload
  become: true
  when: ansible_service_mgr == 'systemd'

- name: "Create kafka directories"
  file: path={{ item }} state=directory mode=0755 owner={{ kafka_user }} group={{ kafka_group }}
  become: true
  with_items:
    - "{{ kafka_data_dir }}"
    - "{{ kafka_log_dir }}"

- name: "Remove lost+found in the datadir"
  file: path="{{ kafka_data_dir }}/lost+found" state=absent
  become: true

- name: "Symlink kafka_conf_dir to /usr/local/kafka/config"
  file: src=/usr/local/kafka/config path={{ kafka_conf_dir }} state=link
  become: true
